{"version":3,"file":"node_modules_pnpm_lottie-react-native_6_7_2_react-native_0_71_8_react_18_2_0_node_modules_lot-b9a5c7.chunk.bundle","mappings":"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","sources":["webpack:///../../node_modules/.pnpm/lottie-react-native@6.7.2_react-native@0.71.8_react@18.2.0/node_modules/lottie-react-native/src/LottieView/index.tsx","webpack:///../../node_modules/.pnpm/lottie-react-native@6.7.2_react-native@0.71.8_react@18.2.0/node_modules/lottie-react-native/src/LottieView/utils.ts","webpack:///../../node_modules/.pnpm/lottie-react-native@6.7.2_react-native@0.71.8_react@18.2.0/node_modules/lottie-react-native/src/index.tsx","webpack:///../../node_modules/.pnpm/lottie-react-native@6.7.2_react-native@0.71.8_react@18.2.0/node_modules/lottie-react-native/src/specs/LottieAnimationViewNativeComponent.ts","webpack:///../../node_modules/.pnpm/react-native@0.71.8_@babel+core@7.23.0_@babel+preset-env@7.22.20_react@18.2.0/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.js","webpack:///../../node_modules/.pnpm/react-native@0.71.8_@babel+core@7.23.0_@babel+preset-env@7.22.20_react@18.2.0/node_modules/react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js","webpack:///../../node_modules/.pnpm/react-native@0.71.8_@babel+core@7.23.0_@babel+preset-env@7.22.20_react@18.2.0/node_modules/react-native/Libraries/Utilities/codegenNativeComponent.js"],"sourcesContent":["import React from 'react';\nimport { NativeSyntheticEvent, ViewProps, processColor } from 'react-native';\n\nimport { parsePossibleSources } from './utils';\n\nimport type { LottieViewProps } from '../types';\n\nimport NativeLottieAnimationView, {\n  Commands,\n} from '../specs/LottieAnimationViewNativeComponent';\n\ntype Props = LottieViewProps & { containerProps?: ViewProps };\n\nconst defaultProps: Props = {\n  source: undefined,\n  progress: 0,\n  speed: 1,\n  loop: true,\n  autoPlay: false,\n  enableMergePathsAndroidForKitKatAndAbove: false,\n  cacheComposition: true,\n  useNativeLooping: false,\n  resizeMode: 'contain',\n  colorFilters: [],\n  textFiltersAndroid: [],\n  textFiltersIOS: [],\n};\n\nexport class LottieView extends React.PureComponent<Props, {}> {\n  static defaultProps = defaultProps;\n\n  private lottieAnimationViewRef:\n    | React.ElementRef<typeof NativeLottieAnimationView>\n    | undefined;\n\n  constructor(props: Props) {\n    super(props);\n    this.play = this.play.bind(this);\n    this.reset = this.reset.bind(this);\n    this.pause = this.pause.bind(this);\n    this.resume = this.resume.bind(this);\n    this.onAnimationFinish = this.onAnimationFinish.bind(this);\n    this.captureRef = this.captureRef.bind(this);\n\n    if (props.hover != undefined && __DEV__) {\n      console.warn('lottie-react-native: hover is only supported on web');\n    }\n  }\n\n  play(startFrame?: number, endFrame?: number): void {\n    Commands.play(\n      this.lottieAnimationViewRef,\n      startFrame ?? -1,\n      endFrame ?? -1,\n    );\n  }\n\n  reset() {\n    Commands.reset(this.lottieAnimationViewRef);\n  }\n\n  pause() {\n    Commands.pause(this.lottieAnimationViewRef);\n  }\n\n  resume() {\n    Commands.resume(this.lottieAnimationViewRef);\n  }\n\n  private onAnimationFinish = (\n    evt: NativeSyntheticEvent<{ isCancelled: boolean }>,\n  ) => {\n    this.props.onAnimationFinish?.(evt.nativeEvent.isCancelled);\n  };\n\n  private onAnimationFailure = (\n    evt: NativeSyntheticEvent<{ error: string }>,\n  ) => {\n    this.props.onAnimationFailure?.(evt.nativeEvent.error);\n  };\n\n  private onAnimationLoaded = () => {\n    this.props.onAnimationLoaded?.()\n  }\n\n  private captureRef(ref: React.ElementRef<typeof NativeLottieAnimationView>) {\n    if (ref === null) {\n      return;\n    }\n\n    this.lottieAnimationViewRef = ref;\n    if (this.props.autoPlay === true) {\n      this.play();\n    }\n  }\n\n  render(): React.ReactNode {\n    const {\n      style,\n      source,\n      autoPlay,\n      duration,\n      textFiltersAndroid,\n      textFiltersIOS,\n      resizeMode,\n      ...rest\n    } = this.props;\n\n    const sources = parsePossibleSources(source);\n\n    const speed =\n      duration && sources.sourceJson && (source as any).fr\n        ? Math.round(\n          (((source as any).op / (source as any).fr) * 1000) / duration,\n        )\n        : this.props.speed;\n\n    const colorFilters = this.props.colorFilters?.map((colorFilter) => ({\n      ...colorFilter,\n      color: processColor(colorFilter.color),\n    }));\n\n    return (\n      <NativeLottieAnimationView\n        ref={this.captureRef}\n        {...rest}\n        colorFilters={colorFilters}\n        textFiltersAndroid={textFiltersAndroid}\n        textFiltersIOS={textFiltersIOS}\n        speed={speed}\n        style={style}\n        onAnimationFinish={this.onAnimationFinish}\n        onAnimationFailure={this.onAnimationFailure}\n        onAnimationLoaded={this.onAnimationLoaded}\n        autoPlay={autoPlay}\n        resizeMode={resizeMode}\n        {...sources}\n      />\n    );\n  }\n}\n","import { Image } from 'react-native';\n\nfunction parsePossibleSources(source):\n  | {\n      sourceURL?: string;\n      sourceJson?: string;\n      sourceName?: string;\n      sourceDotLottieURI?: string;\n    }\n  | undefined {\n  const uri = (source as any).uri;\n\n  if (typeof source === 'string') {\n    return { sourceName: source };\n  }\n\n  if (typeof source === 'object' && !uri) {\n    return { sourceJson: JSON.stringify(source) };\n  }\n\n  if (typeof source === 'object' && uri) {\n    // uri contains .lottie extension return sourceDotLottieURI\n    if (uri.includes('.lottie')) {\n      return { sourceDotLottieURI: uri };\n    }\n\n    return { sourceURL: uri };\n  }\n\n  if (typeof source === 'number') {\n    return { sourceDotLottieURI: Image.resolveAssetSource(source).uri };\n  }\n\n  return undefined;\n}\n\nexport { parsePossibleSources };\n","import { LottieView } from './LottieView';\nexport * from './types';\nexport default LottieView;\n","import type {\n  BubblingEventHandler,\n  Int32,\n  Double,\n  Float,\n} from 'react-native/Libraries/Types/CodegenTypes';\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\nimport type { ProcessedColorValue, ViewProps, HostComponent } from 'react-native';\n\nexport type OnAnimationFinishEvent = Readonly<{\n  isCancelled: boolean;\n}>;\n\nexport type AnimationFailureEvent = Readonly<{\n  error: string;\n}>;\n\ntype AnimationLoadedEvent = Readonly<{}>\n\ntype ColorFilterStruct = Readonly<{\n  keypath: string;\n  color: ProcessedColorValue;\n}>;\n\ntype TextFilterIOSStruct = Readonly<{\n  keypath: string;\n  text: string;\n}>;\n\ntype TextFilterAndroidStruct = Readonly<{\n  find: string;\n  replace: string;\n}>;\n\nexport interface NativeProps extends ViewProps {\n  resizeMode?: string;\n  renderMode?: string;\n  sourceName?: string;\n  sourceJson?: string;\n  sourceURL?: string;\n  sourceDotLottieURI?: string;\n  imageAssetsFolder?: string;\n  progress?: Float;\n  speed?: Double;\n  loop?: boolean;\n  autoPlay?: boolean;\n  enableMergePathsAndroidForKitKatAndAbove?: boolean;\n  hardwareAccelerationAndroid?: boolean;\n  cacheComposition?: boolean;\n  colorFilters?: ReadonlyArray<ColorFilterStruct>;\n  // dummy that solves codegen issue when there's a ReadonlyArray<Object> without another Object prop\n  // https://github.com/reactwg/react-native-new-architecture/discussions/104\n  dummy?: Readonly<{ dummy: boolean }>;\n  textFiltersAndroid?: ReadonlyArray<TextFilterAndroidStruct>;\n  textFiltersIOS?: ReadonlyArray<TextFilterIOSStruct>;\n  onAnimationFinish?: BubblingEventHandler<\n    OnAnimationFinishEvent,\n    'onAnimationFinish'\n  >;\n  onAnimationFailure?: BubblingEventHandler<\n    AnimationFailureEvent,\n    'onAnimationFailure'\n  >;\n  onAnimationLoaded?: BubblingEventHandler<\n    AnimationLoadedEvent,\n    'onAnimationLoaded'\n  >;\n}\n\ntype LottieViewNativeComponentType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  play: (\n    viewRef: React.ElementRef<LottieViewNativeComponentType>,\n    startFrame: Int32,\n    endFrame: Int32,\n  ) => void;\n  reset: (viewRef: React.ElementRef<LottieViewNativeComponentType>) => void;\n  pause: (viewRef: React.ElementRef<LottieViewNativeComponentType>) => void;\n  resume: (viewRef: React.ElementRef<LottieViewNativeComponentType>) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['play', 'reset', 'pause', 'resume'],\n});\n\nexport default codegenNativeComponent<NativeProps>('LottieAnimationView') as HostComponent<NativeProps>;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {HostComponent} from '../Renderer/shims/ReactNativeTypes';\n\nconst createReactNativeComponentClass = require('../Renderer/shims/createReactNativeComponentClass');\nconst getNativeComponentAttributes = require('./getNativeComponentAttributes');\n\n/**\n * Creates values that can be used like React components which represent native\n * view managers. You should create JavaScript modules that wrap these values so\n * that the results are memoized. Example:\n *\n *   const View = requireNativeComponent('RCTView');\n *\n */\n\nconst requireNativeComponent = <T>(uiViewClassName: string): HostComponent<T> =>\n  ((createReactNativeComponentClass(uiViewClassName, () =>\n    getNativeComponentAttributes(uiViewClassName),\n  ): any): HostComponent<T>);\n\nmodule.exports = requireNativeComponent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noformat\n * @flow strict-local\n * @generated SignedSource<<7d3d4090dadea2daa09d92e5e66f6e5d>>\n *\n * This file was sync'd from the facebook/react repository.\n */\n\n'use strict';\n\nimport {ReactNativeViewConfigRegistry} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\nimport {type ViewConfig} from './ReactNativeTypes';\n\nconst {register} = ReactNativeViewConfigRegistry;\n\n/**\n * Creates a renderable ReactNative host component.\n * Use this method for view configs that are loaded from UIManager.\n * Use createReactNativeComponentClass() for view configs defined within JavaScript.\n *\n * @param {string} config iOS View configuration.\n * @private\n */\nconst createReactNativeComponentClass = function(\n  name: string,\n  callback: () => ViewConfig,\n): string {\n  return register(name, callback);\n};\n\nmodule.exports = createReactNativeComponentClass;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// TODO: move this file to shims/ReactNative (requires React update and sync)\n\nimport type {HostComponent} from '../../Libraries/Renderer/shims/ReactNativeTypes';\n\nimport requireNativeComponent from '../../Libraries/ReactNative/requireNativeComponent';\nimport UIManager from '../ReactNative/UIManager';\n\n// TODO: import from CodegenSchema once workspaces are enabled\ntype Options = $ReadOnly<{|\n  interfaceOnly?: boolean,\n  paperComponentName?: string,\n  paperComponentNameDeprecated?: string,\n  excludedPlatforms?: $ReadOnlyArray<'iOS' | 'android'>,\n|}>;\n\nexport type NativeComponentType<T> = HostComponent<T>;\n\n// If this function runs then that means the view configs were not\n// generated at build time using `GenerateViewConfigJs.js`. Thus\n// we need to `requireNativeComponent` to get the view configs from view managers.\n// `requireNativeComponent` is not available in Bridgeless mode.\n// e.g. This function runs at runtime if `codegenNativeComponent` was not called\n// from a file suffixed with NativeComponent.js.\nfunction codegenNativeComponent<Props>(\n  componentName: string,\n  options?: Options,\n): NativeComponentType<Props> {\n  if (global.RN$Bridgeless === true) {\n    const errorMessage =\n      \"Native Component '\" +\n      componentName +\n      \"' that calls codegenNativeComponent was not code generated at build time. Please check its definition.\";\n    console.error(errorMessage);\n  }\n\n  let componentNameInUse =\n    options && options.paperComponentName != null\n      ? options.paperComponentName\n      : componentName;\n\n  if (options != null && options.paperComponentNameDeprecated != null) {\n    if (UIManager.hasViewManagerConfig(componentName)) {\n      componentNameInUse = componentName;\n    } else if (\n      options.paperComponentNameDeprecated != null &&\n      UIManager.hasViewManagerConfig(options.paperComponentNameDeprecated)\n    ) {\n      // $FlowFixMe[incompatible-type]\n      componentNameInUse = options.paperComponentNameDeprecated;\n    } else {\n      throw new Error(\n        `Failed to find native component for either ${componentName} or ${\n          options.paperComponentNameDeprecated ?? '(unknown)'\n        }`,\n      );\n    }\n  }\n\n  return (requireNativeComponent<Props>(\n    // $FlowFixMe[incompatible-call]\n    componentNameInUse,\n  ): HostComponent<Props>);\n}\n\nexport default codegenNativeComponent;\n"],"names":["_react","_interopRequireDefault","require","_reactNative","_utils","_LottieAnimationViewNativeComponent","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_jsxRuntime","_excluded","WeakMap","cacheBabelInterop","cacheNodeInterop","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","result","Super","_getPrototypeOf2","NewTarget","constructor","arguments","apply","_possibleConstructorReturn2","defaultProps","source","undefined","progress","speed","loop","autoPlay","enableMergePathsAndroidForKitKatAndAbove","cacheComposition","useNativeLooping","resizeMode","colorFilters","textFiltersAndroid","textFiltersIOS","exports","_React$PureComponent","_inherits2","LottieView","_super","props","_this","_classCallCheck2","onAnimationFinish","evt","nativeEvent","isCancelled","onAnimationFailure","error","onAnimationLoaded","play","bind","_assertThisInitialized2","reset","pause","resume","captureRef","hover","_createClass2","value","startFrame","endFrame","Commands","this","lottieAnimationViewRef","ref","_this$props$colorFilt","_this$props","style","duration","rest","_objectWithoutProperties2","sources","parsePossibleSources","sourceJson","fr","Math","round","op","map","colorFilter","assign","color","processColor","jsx","React","PureComponent","uri","sourceName","JSON","stringify","includes","sourceDotLottieURI","sourceURL","Image","resolveAssetSource","_LottieView","_types","keys","forEach","_exportNames","enumerable","_codegenNativeComponent","_codegenNativeCommands","codegenNativeCommands","supportedCommands","codegenNativeComponent","createReactNativeComponentClass","getNativeComponentAttributes","module","uiViewClassName","register","ReactNativeViewConfigRegistry","name","callback","_requireNativeComponent","_UIManager","componentName","options","global","RN$Bridgeless","errorMessage","console","componentNameInUse","paperComponentName","paperComponentNameDeprecated","UIManager","hasViewManagerConfig","_options$paperCompone","Error","requireNativeComponent"],"sourceRoot":""}