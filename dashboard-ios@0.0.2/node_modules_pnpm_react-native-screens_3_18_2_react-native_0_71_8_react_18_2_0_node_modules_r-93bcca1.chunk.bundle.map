{"version":3,"file":"node_modules_pnpm_react-native-screens_3_18_2_react-native_0_71_8_react_18_2_0_node_modules_r-93bcca1.chunk.bundle","mappings":"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","sources":["webpack:///../../node_modules/.pnpm/react-freeze@1.0.3_react@18.2.0/node_modules/react-freeze/src/index.tsx","webpack:///../../node_modules/.pnpm/react-native-screens@3.18.2_react-native@0.71.8_react@18.2.0/node_modules/react-native-screens/src/TransitionProgressContext.tsx","webpack:///../../node_modules/.pnpm/react-native-screens@3.18.2_react-native@0.71.8_react@18.2.0/node_modules/react-native-screens/src/index.native.tsx","webpack:///../../node_modules/.pnpm/react-native-screens@3.18.2_react-native@0.71.8_react@18.2.0/node_modules/react-native-screens/src/useTransitionProgress.tsx","webpack:///../../node_modules/.pnpm/react-native-screens@3.18.2_react-native@0.71.8_react@18.2.0/node_modules/react-native-screens/src/utils.ts"],"sourcesContent":["import React, { useRef, Suspense, Fragment } from \"react\";\n\ninterface StorageRef {\n  promise?: Promise<void>;\n  resolve?: (value: void | PromiseLike<void>) => void;\n}\n\nfunction Suspender({\n  freeze,\n  children,\n}: {\n  freeze: boolean;\n  children: React.ReactNode;\n}) {\n  const promiseCache = useRef<StorageRef>({}).current;\n  if (freeze && !promiseCache.promise) {\n    promiseCache.promise = new Promise((resolve) => {\n      promiseCache.resolve = resolve;\n    });\n    throw promiseCache.promise;\n  } else if (freeze) {\n    throw promiseCache.promise;\n  } else if (promiseCache.promise) {\n    promiseCache.resolve!();\n    promiseCache.promise = undefined;\n  }\n\n  return <Fragment>{children}</Fragment>;\n}\n\ninterface Props {\n  freeze: boolean;\n  children: React.ReactNode;\n  placeholder?: React.ReactNode;\n}\n\nexport function Freeze({ freeze, children, placeholder = null }: Props) {\n  return (\n    <Suspense fallback={placeholder}>\n      <Suspender freeze={freeze}>{children}</Suspender>\n    </Suspense>\n  );\n}\n","import * as React from 'react';\nimport { Animated } from 'react-native';\n\ntype TransitionProgressContextBody = {\n  progress: Animated.Value;\n  closing: Animated.Value;\n  goingForward: Animated.Value;\n};\n\nexport default React.createContext<TransitionProgressContextBody | undefined>(\n  undefined\n);\n","import React from 'react';\nimport {\n  Animated,\n  Image,\n  ImageProps,\n  Platform,\n  requireNativeComponent,\n  StyleSheet,\n  UIManager,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Freeze } from 'react-freeze';\nimport { version } from 'react-native/package.json';\n\nimport TransitionProgressContext from './TransitionProgressContext';\nimport useTransitionProgress from './useTransitionProgress';\nimport {\n  StackPresentationTypes,\n  StackAnimationTypes,\n  BlurEffectTypes,\n  ScreenReplaceTypes,\n  ScreenOrientationTypes,\n  HeaderSubviewTypes,\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n} from './types';\nimport {\n  isSearchBarAvailableForCurrentPlatform,\n  executeNativeBackPress,\n} from './utils';\n\n// web implementation is taken from `index.tsx`\nconst isPlatformSupported =\n  Platform.OS === 'ios' ||\n  Platform.OS === 'android' ||\n  Platform.OS === 'windows';\n\nlet ENABLE_SCREENS = isPlatformSupported;\n\nfunction enableScreens(shouldEnableScreens = true): void {\n  ENABLE_SCREENS = isPlatformSupported && shouldEnableScreens;\n  if (ENABLE_SCREENS && !UIManager.getViewManagerConfig('RNSScreen')) {\n    console.error(\n      `Screen native module hasn't been linked. Please check the react-native-screens README for more details`\n    );\n  }\n}\n\nlet ENABLE_FREEZE = false;\n\nfunction enableFreeze(shouldEnableReactFreeze = true): void {\n  const minor = parseInt(version.split('.')[1]); // eg. takes 66 from '0.66.0'\n\n  // react-freeze requires react-native >=0.64, react-native from main is 0.0.0\n  if (!(minor === 0 || minor >= 64) && shouldEnableReactFreeze) {\n    console.warn(\n      'react-freeze library requires at least react-native 0.64. Please upgrade your react-native version in order to use this feature.'\n    );\n  }\n\n  ENABLE_FREEZE = shouldEnableReactFreeze;\n}\n\n// const that tells if the library should use new implementation, will be undefined for older versions\nconst shouldUseActivityState = true;\n\nfunction screensEnabled(): boolean {\n  return ENABLE_SCREENS;\n}\n\n// We initialize these lazily so that importing the module doesn't throw error when not linked\n// This is necessary coz libraries such as React Navigation import the library where it may not be enabled\nlet NativeScreenValue: React.ComponentType<ScreenProps>;\nlet NativeScreenContainerValue: React.ComponentType<ScreenContainerProps>;\nlet NativeScreenNavigationContainerValue: React.ComponentType<ScreenContainerProps>;\nlet NativeScreenStack: React.ComponentType<ScreenStackProps>;\nlet NativeScreenStackHeaderConfig: React.ComponentType<ScreenStackHeaderConfigProps>;\nlet NativeScreenStackHeaderSubview: React.ComponentType<React.PropsWithChildren<\n  ViewProps & { type?: HeaderSubviewTypes }\n>>;\nlet AnimatedNativeScreen: React.ComponentType<ScreenProps>;\nlet NativeSearchBar: React.ComponentType<SearchBarProps>;\nlet NativeFullWindowOverlay: React.ComponentType<View>;\n\nconst ScreensNativeModules = {\n  get NativeScreen() {\n    NativeScreenValue =\n      NativeScreenValue || requireNativeComponent('RNSScreen');\n    return NativeScreenValue;\n  },\n\n  get NativeScreenContainer() {\n    NativeScreenContainerValue =\n      NativeScreenContainerValue ||\n      requireNativeComponent('RNSScreenContainer');\n    return NativeScreenContainerValue;\n  },\n\n  get NativeScreenNavigationContainer() {\n    NativeScreenNavigationContainerValue =\n      NativeScreenNavigationContainerValue ||\n      (Platform.OS === 'ios'\n        ? requireNativeComponent('RNSScreenNavigationContainer')\n        : this.NativeScreenContainer);\n    return NativeScreenNavigationContainerValue;\n  },\n\n  get NativeScreenStack() {\n    NativeScreenStack =\n      NativeScreenStack || requireNativeComponent('RNSScreenStack');\n    return NativeScreenStack;\n  },\n\n  get NativeScreenStackHeaderConfig() {\n    NativeScreenStackHeaderConfig =\n      NativeScreenStackHeaderConfig ||\n      requireNativeComponent('RNSScreenStackHeaderConfig');\n    return NativeScreenStackHeaderConfig;\n  },\n\n  get NativeScreenStackHeaderSubview() {\n    NativeScreenStackHeaderSubview =\n      NativeScreenStackHeaderSubview ||\n      requireNativeComponent('RNSScreenStackHeaderSubview');\n    return NativeScreenStackHeaderSubview;\n  },\n\n  get NativeSearchBar() {\n    NativeSearchBar = NativeSearchBar || requireNativeComponent('RNSSearchBar');\n    return NativeSearchBar;\n  },\n\n  get NativeFullWindowOverlay() {\n    NativeFullWindowOverlay =\n      NativeFullWindowOverlay || requireNativeComponent('RNSFullWindowOverlay');\n    return NativeFullWindowOverlay;\n  },\n};\n\ninterface FreezeWrapperProps {\n  freeze: boolean;\n  children: React.ReactNode;\n}\n\n// This component allows one more render before freezing the screen.\n// Allows activityState to reach the native side and useIsFocused to work correctly.\nfunction DelayedFreeze({ freeze, children }: FreezeWrapperProps) {\n  // flag used for determining whether freeze should be enabled\n  const [freezeState, setFreezeState] = React.useState(false);\n\n  if (freeze !== freezeState) {\n    // setImmediate is executed at the end of the JS execution block.\n    // Used here for changing the state right after the render.\n    setImmediate(() => {\n      setFreezeState(freeze);\n    });\n  }\n\n  return <Freeze freeze={freeze ? freezeState : false}>{children}</Freeze>;\n}\n\nfunction ScreenStack(props: ScreenStackProps) {\n  const { children, ...rest } = props;\n  const size = React.Children.count(children);\n  // freezes all screens except the top one\n  const childrenWithFreeze = React.Children.map(children, (child, index) => {\n    // @ts-expect-error it's either SceneView in v6 or RouteView in v5\n    const { props, key } = child;\n    const descriptor = props?.descriptor ?? props?.descriptors?.[key];\n    const freezeEnabled = descriptor?.options?.freezeOnBlur ?? ENABLE_FREEZE;\n\n    return (\n      <DelayedFreeze freeze={freezeEnabled && size - index > 1}>\n        {child}\n      </DelayedFreeze>\n    );\n  });\n\n  return (\n    <ScreensNativeModules.NativeScreenStack {...rest}>\n      {childrenWithFreeze}\n    </ScreensNativeModules.NativeScreenStack>\n  );\n}\n\n// Incomplete type, all accessible properties available at:\n// react-native/Libraries/Components/View/ReactNativeViewViewConfig.js\ninterface ViewConfig extends View {\n  viewConfig: {\n    validAttributes: {\n      style: {\n        display: boolean;\n      };\n    };\n  };\n}\n\nclass InnerScreen extends React.Component<ScreenProps> {\n  private ref: React.ElementRef<typeof View> | null = null;\n  private closing = new Animated.Value(0);\n  private progress = new Animated.Value(0);\n  private goingForward = new Animated.Value(0);\n\n  setNativeProps(props: ScreenProps): void {\n    this.ref?.setNativeProps(props);\n  }\n\n  setRef = (ref: React.ElementRef<typeof View> | null): void => {\n    this.ref = ref;\n    this.props.onComponentRef?.(ref);\n  };\n\n  render() {\n    const {\n      enabled = ENABLE_SCREENS,\n      freezeOnBlur = ENABLE_FREEZE,\n      ...rest\n    } = this.props;\n\n    if (enabled && isPlatformSupported) {\n      AnimatedNativeScreen =\n        AnimatedNativeScreen ||\n        Animated.createAnimatedComponent(ScreensNativeModules.NativeScreen);\n\n      let {\n        // Filter out active prop in this case because it is unused and\n        // can cause problems depending on react-native version:\n        // https://github.com/react-navigation/react-navigation/issues/4886\n        active,\n        activityState,\n        children,\n        isNativeStack,\n        gestureResponseDistance,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        console.warn(\n          'It appears that you are using old version of react-navigation library. Please update @react-navigation/bottom-tabs, @react-navigation/stack and @react-navigation/drawer to version 5.10.0 or above to take full advantage of new functionality added to react-native-screens'\n        );\n        activityState = active !== 0 ? 2 : 0; // in the new version, we need one of the screens to have value of 2 after the transition\n      }\n\n      const handleRef = (ref: ViewConfig) => {\n        if (ref?.viewConfig?.validAttributes?.style) {\n          ref.viewConfig.validAttributes.style = {\n            ...ref.viewConfig.validAttributes.style,\n            display: false,\n          };\n          this.setRef(ref);\n        }\n      };\n\n      return (\n        <DelayedFreeze freeze={freezeOnBlur && activityState === 0}>\n          <AnimatedNativeScreen\n            {...props}\n            activityState={activityState}\n            gestureResponseDistance={{\n              start: gestureResponseDistance?.start ?? -1,\n              end: gestureResponseDistance?.end ?? -1,\n              top: gestureResponseDistance?.top ?? -1,\n              bottom: gestureResponseDistance?.bottom ?? -1,\n            }}\n            // This prevents showing blank screen when navigating between multiple screens with freezing\n            // https://github.com/software-mansion/react-native-screens/pull/1208\n            ref={handleRef}\n            onTransitionProgress={\n              !isNativeStack\n                ? undefined\n                : Animated.event(\n                    [\n                      {\n                        nativeEvent: {\n                          progress: this.progress,\n                          closing: this.closing,\n                          goingForward: this.goingForward,\n                        },\n                      },\n                    ],\n                    { useNativeDriver: true }\n                  )\n            }>\n            {!isNativeStack ? ( // see comment of this prop in types.tsx for information why it is needed\n              children\n            ) : (\n              <TransitionProgressContext.Provider\n                value={{\n                  progress: this.progress,\n                  closing: this.closing,\n                  goingForward: this.goingForward,\n                }}>\n                {children}\n              </TransitionProgressContext.Provider>\n            )}\n          </AnimatedNativeScreen>\n        </DelayedFreeze>\n      );\n    } else {\n      // same reason as above\n      let {\n        active,\n        activityState,\n        style,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onComponentRef,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0;\n      }\n      return (\n        <Animated.View\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          ref={this.setRef}\n          {...props}\n        />\n      );\n    }\n  }\n}\n\nfunction ScreenContainer(props: ScreenContainerProps) {\n  const { enabled = ENABLE_SCREENS, hasTwoStates, ...rest } = props;\n\n  if (enabled && isPlatformSupported) {\n    if (hasTwoStates) {\n      return <ScreensNativeModules.NativeScreenNavigationContainer {...rest} />;\n    }\n    return <ScreensNativeModules.NativeScreenContainer {...rest} />;\n  }\n  return <View {...rest} />;\n}\n\nconst styles = StyleSheet.create({\n  headerSubview: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst ScreenStackHeaderBackButtonImage = (props: ImageProps): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    type=\"back\"\n    style={styles.headerSubview}>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </ScreensNativeModules.NativeScreenStackHeaderSubview>\n);\n\nconst ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"right\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"left\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"center\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"searchBar\"\n    style={styles.headerSubview}\n  />\n);\n\nexport type {\n  StackPresentationTypes,\n  StackAnimationTypes,\n  BlurEffectTypes,\n  ScreenReplaceTypes,\n  ScreenOrientationTypes,\n  HeaderSubviewTypes,\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n};\n\n// context to be used when the user wants to use enhanced implementation\n// e.g. to use `useReanimatedTransitionProgress` (see `reanimated` folder in repo)\nconst ScreenContext = React.createContext(InnerScreen);\n\nclass Screen extends React.Component<ScreenProps> {\n  static contextType = ScreenContext;\n\n  render() {\n    const ScreenWrapper = this.context || InnerScreen;\n    return <ScreenWrapper {...this.props} />;\n  }\n}\n\nmodule.exports = {\n  // these are classes so they are not evaluated until used\n  // so no need to use getters for them\n  Screen,\n  ScreenContainer,\n  ScreenContext,\n  ScreenStack,\n  InnerScreen,\n\n  get NativeScreen() {\n    return ScreensNativeModules.NativeScreen;\n  },\n\n  get NativeScreenContainer() {\n    return ScreensNativeModules.NativeScreenContainer;\n  },\n\n  get NativeScreenNavigationContainer() {\n    return ScreensNativeModules.NativeScreenNavigationContainer;\n  },\n\n  get ScreenStackHeaderConfig() {\n    return ScreensNativeModules.NativeScreenStackHeaderConfig;\n  },\n  get ScreenStackHeaderSubview() {\n    return ScreensNativeModules.NativeScreenStackHeaderSubview;\n  },\n  get SearchBar() {\n    if (!isSearchBarAvailableForCurrentPlatform) {\n      console.warn(\n        'Importing SearchBar is only valid on iOS and Android devices.'\n      );\n      return View;\n    }\n\n    return ScreensNativeModules.NativeSearchBar;\n  },\n  get FullWindowOverlay() {\n    if (Platform.OS !== 'ios') {\n      console.warn('Importing FullWindowOverlay is only valid on iOS devices.');\n      return View;\n    }\n\n    return ScreensNativeModules.NativeFullWindowOverlay;\n  },\n  // these are functions and will not be evaluated until used\n  // so no need to use getters for them\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderSearchBarView,\n\n  enableScreens,\n  enableFreeze,\n  screensEnabled,\n  shouldUseActivityState,\n  useTransitionProgress,\n\n  isSearchBarAvailableForCurrentPlatform,\n  executeNativeBackPress,\n};\n","import * as React from 'react';\n\nimport TransitionProgressContext from './TransitionProgressContext';\n\nexport default function useTransitionProgress() {\n  const progress = React.useContext(TransitionProgressContext);\n\n  if (progress === undefined) {\n    throw new Error(\n      \"Couldn't find values for transition progress. Are you inside a screen in Native Stack?\"\n    );\n  }\n\n  return progress;\n}\n","import { BackHandler, Platform } from 'react-native';\n\nexport const isSearchBarAvailableForCurrentPlatform = [\n  'ios',\n  'android',\n].includes(Platform.OS);\n\nexport function executeNativeBackPress() {\n  // This function invokes the native back press event\n  BackHandler.exitApp();\n  return true;\n}\n"],"names":["_ref2","freeze","children","_ref2$placeholder","placeholder","_jsxRuntime","jsx","_react","Suspense","fallback","Suspender","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","WeakMap","cacheBabelInterop","cacheNodeInterop","_ref","promiseCache","useRef","current","promise","Promise","resolve","undefined","Fragment","React","exports","createContext","_interopRequireDefault","_reactNative","_reactFreeze","_package","_TransitionProgressContext","_useTransitionProgress","_utils","_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","result","Super","_getPrototypeOf2","NewTarget","constructor","arguments","apply","_possibleConstructorReturn2","isPlatformSupported","Platform","OS","ENABLE_SCREENS","ENABLE_FREEZE","NativeScreenValue","NativeScreenContainerValue","NativeScreenNavigationContainerValue","NativeScreenStack","NativeScreenStackHeaderConfig","NativeScreenStackHeaderSubview","AnimatedNativeScreen","NativeSearchBar","NativeFullWindowOverlay","ScreensNativeModules","NativeScreen","requireNativeComponent","NativeScreenContainer","NativeScreenNavigationContainer","this","DelayedFreeze","_React$useState","useState","_React$useState2","_slicedToArray2","freezeState","setFreezeState","setImmediate","Freeze","InnerScreen","_React$Component","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","ref","closing","Animated","Value","progress","goingForward","setRef","props","onComponentRef","_createClass2","value","_this$ref","setNativeProps","_this2","_this$props","_this$props$enabled","enabled","_this$props$freezeOnB","freezeOnBlur","rest","_objectWithoutProperties2","_gestureResponseDista","_gestureResponseDista2","_gestureResponseDista3","_gestureResponseDista4","createAnimatedComponent","active","activityState","isNativeStack","gestureResponseDistance","console","warn","assign","start","end","top","bottom","_ref$viewConfig","_ref$viewConfig$valid","viewConfig","validAttributes","style","display","onTransitionProgress","event","nativeEvent","useNativeDriver","Provider","View","Component","styles","StyleSheet","create","headerSubview","position","right","flexDirection","alignItems","justifyContent","ScreenContext","Screen","_React$Component2","_super2","ScreenWrapper","context","contextType","module","ScreenContainer","_props$enabled","hasTwoStates","ScreenStack","size","Children","count","childrenWithFreeze","map","child","index","_props$descriptor","_props$descriptors","_descriptor$options$f","_descriptor$options","descriptor","descriptors","freezeEnabled","options","ScreenStackHeaderConfig","ScreenStackHeaderSubview","SearchBar","isSearchBarAvailableForCurrentPlatform","FullWindowOverlay","ScreenStackHeaderBackButtonImage","type","Image","resizeMode","fadeDuration","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","ScreenStackHeaderSearchBarView","enableScreens","UIManager","getViewManagerConfig","error","enableFreeze","shouldEnableReactFreeze","minor","parseInt","version","split","screensEnabled","shouldUseActivityState","useTransitionProgress","executeNativeBackPress","useContext","TransitionProgressContext","Error","BackHandler","exitApp","includes"],"sourceRoot":""}