{"version":3,"file":"src_screens_SignInScreen_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/screens/SignInScreen.tsx"],"sourcesContent":["/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable react/no-unstable-nested-components */\nimport React from 'react';\nimport {Alert, Dimensions, StyleSheet, Linking, View} from 'react-native';\nimport {\n  Button,\n  IconButton,\n  MD3Colors,\n  Text,\n  TextInput,\n  useTheme,\n} from 'react-native-paper';\nimport {AnyObj, useAuthStore, Api} from '@smarttestpro/smart-common';\nimport {AuthConfiguration, authorize} from 'react-native-app-auth';\nimport jwtDecode from 'jwt-decode';\nimport {LoginAnimation} from '../lotties/LoginAnimation';\nimport {GoogleIcon} from '../icons/GoogleIcon';\nimport {FacebookIcon} from '../icons';\n\ntype LoginFormValues = {\n  username: string;\n  password: string;\n};\n\nconst ssoConfig: AuthConfiguration = {\n  // clientId: '<YOUR_CLIENT_ID>',\n  // redirectUrl: '<YOUR_REDIRECT_URL>',\n  // scopes: ['<YOUR_SCOPE_ARRAY>'],\n  clientId: 'smarttest',\n  redirectUrl: 'com.host.auth://oauth',\n  clientSecret: 'lu85bexiwZMQwZb0hRMdSSBMQzrB9fYj',\n  scopes: ['openid'],\n  serviceConfiguration: {\n    authorizationEndpoint:\n      'https://auth.smarttest.pro/realms/smarttest/protocol/openid-connect/auth',\n    tokenEndpoint:\n      'https://auth.smarttest.pro/realms/smarttest/protocol/openid-connect/token',\n    revocationEndpoint:\n      'https://auth.smarttest.pro/realms/smarttest/protocol/openid-connect/logout',\n  },\n  additionalParameters: {\n    prompt: 'login',\n  },\n};\n\nconst SignInScreen = () => {\n  const {\n    setAuth,\n    setLoading,\n    loading,\n    getListSub,\n    setDefaultSubId,\n    setIsSubOwner,\n    getUserRoles,\n  } = useAuthStore();\n  const theme = useTheme();\n\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [loadingLogin, setLoadingLogin] = React.useState(false);\n\n  const processLoginWithToken = async (token: any) => {\n    try {\n      const userResult = await Api.profile.getUserInfo(token.access_token);\n\n      const userInfoInToken: AnyObj = jwtDecode(token.access_token);\n      if (userResult.status === 200) {\n        console.log(Api.SubscriptionApi, 'Api.SubscriptionApi');\n        const userDefaultSub = await Api.SubscriptionApi.getDefaultSub(\n          token.access_token,\n        );\n\n        if (userDefaultSub.data) {\n          setDefaultSubId(userDefaultSub.data.subId);\n          setIsSubOwner(userDefaultSub.data.isSubOwner);\n\n          await Promise.all([\n            getListSub(Api.SubscriptionApi.getListSub, token.access_token),\n            getUserRoles(\n              Api.SubscriptionApi.getUserRolesInSub,\n              token.access_token,\n            ),\n          ]);\n        } else {\n          setDefaultSubId('SMP');\n        }\n\n        setAuth({\n          user: {\n            fullName: userResult.data.name,\n            sub: userResult.data.sub,\n            sub_id: userResult.data.sub_id,\n            email_verified: userResult.data.email_verified,\n            name: userResult.data.name,\n            preferred_username: userResult.data.preferred_username,\n            given_name: userResult.data.given_name,\n            family_name: userResult.data.family_name,\n            email: userResult.data.email,\n            roles: userInfoInToken.realm_access.roles as string[],\n          },\n          accessToken: token.access_token,\n          refreshToken: token.refresh_token,\n        });\n\n        return Promise.resolve(true);\n      }\n    } catch (error) {\n      setLoading('error');\n      Alert.alert('Có lỗi xảy ra, vui lòng thử đăng nhập lại!');\n    }\n  };\n\n  const signIn = async (config: AuthConfiguration) => {\n    try {\n      const authorizeResult = await authorize(config);\n      // Alert.alert(authorizeResult.accessToken);\n      await processLoginWithToken({\n        access_token: authorizeResult.accessToken,\n        refresh_token: authorizeResult.refreshToken,\n      });\n    } catch (error) {\n      console.log('Error signIn:', error);\n    }\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const onSubmit = async ({username, password}: LoginFormValues) => {\n    setLoadingLogin(true);\n\n    try {\n      const result = await Api.auth.login({\n        username,\n        password,\n      });\n\n      if (result.status === 200) {\n        await processLoginWithToken(result.data);\n        return Promise.resolve(true);\n      }\n    } catch (error) {\n      console.log(error);\n      Alert.alert('Thông tin đăng nhập không chính xác, vui lòng thử lại !!');\n    }\n\n    setLoadingLogin(false);\n  };\n\n  return (\n    <View style={styles.container}>\n      <LoginAnimation />\n      <View style={{gap: 10, justifyContent: 'center', alignItems: 'center'}}>\n        <Text\n          style={{\n            fontWeight: '500',\n            fontSize: 28,\n            color: theme.colors.primary,\n          }}>\n          Đăng nhập\n        </Text>\n        <Text>Mừng bạn trở lại</Text>\n        <View style={{width: Dimensions.get('screen').width - 80}}>\n          <TextInput\n            style={{marginBottom: 8}}\n            label=\"Tên đăng nhập\"\n            onChangeText={(text: string) =>\n              setUsername(text.trim().toLocaleLowerCase())\n            }\n            right={<TextInput.Icon icon=\"account\" />}\n          />\n          <TextInput\n            label=\"Mật khẩu\"\n            style={{marginBottom: 8}}\n            onChangeText={(text: string) => setPassword(text)}\n            secureTextEntry\n            right={<TextInput.Icon icon=\"eye\" />}\n          />\n        </View>\n        <Button\n          loading={loadingLogin}\n          mode=\"contained\"\n          style={{width: Dimensions.get('screen').width - 80}}\n          onPress={() => {\n            if (username.length === 0) {\n              Alert.alert('Vui lòng nhập tên đăng nhập');\n              return;\n            } else if (password.length === 0) {\n              Alert.alert('Vui lòng nhập mật khẩu');\n              return;\n            }\n\n            onSubmit({username, password});\n          }}>\n          Đăng nhập\n        </Button>\n        <Text style={{marginTop: 8, marginBottom: 0}}>Hoặc đăng nhập với</Text>\n        <View style={{display: 'flex', flexDirection: 'row'}}>\n          <IconButton\n            size={28}\n            loading={loading === 'loading' || loading === 'success'}\n            mode=\"contained-tonal\"\n            icon={({size}: {size: number; color: string}) => {\n              return (\n                <View style={{width: size, height: size}}>\n                  <GoogleIcon />\n                </View>\n              );\n            }}\n            onPress={() => {\n              signIn(ssoConfig);\n            }}\n          />\n          {/* <IconButton\n            size={28}\n            loading={loading === 'loading' || loading === 'success'}\n            mode=\"contained-tonal\"\n            icon={({size}: {size: number; color: string}) => {\n              return (\n                <View style={{width: size, height: size}}>\n                  <FacebookIcon />\n                </View>\n              );\n            }}\n            onPress={() => {\n              signIn(ssoConfig);\n            }}\n          /> */}\n        </View>\n      </View>\n      <View\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n        }}>\n        <Text\n          style={{color: 'blue', margin: 20}}\n          onPress={() => Linking.openURL('https://smarttest.pro/privacy')}>\n          Quyền riêng tư\n        </Text>\n        <Text\n          style={{color: 'blue', margin: 20}}\n          onPress={() => Linking.openURL('https://smarttest.pro/term')}>\n          Các điều khoản\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  welcomeHeadline: {\n    color: MD3Colors.primary20,\n  },\n  welcomeText: {\n    padding: 16,\n    paddingBottom: 32,\n  },\n});\n\nexport default SignInScreen;\n"],"names":["_react","_interopRequireDefault","require","_reactNative","_reactNativePaper","_smartCommon","_reactNativeAppAuth","_jwtDecode","_LoginAnimation","_GoogleIcon","_jsxRuntime","ssoConfig","clientId","redirectUrl","clientSecret","scopes","serviceConfiguration","authorizationEndpoint","tokenEndpoint","revocationEndpoint","additionalParameters","prompt","styles","StyleSheet","create","container","backgroundColor","flex","justifyContent","alignItems","welcomeHeadline","color","MD3Colors","primary20","welcomeText","padding","paddingBottom","exports","_ref","_ref2","_ref4","_useAuthStore","useAuthStore","setAuth","setLoading","loading","getListSub","setDefaultSubId","setIsSubOwner","getUserRoles","theme","useTheme","_React$useState","React","useState","_React$useState2","_slicedToArray2","default","username","setUsername","_React$useState3","_React$useState4","password","setPassword","_React$useState5","_React$useState6","loadingLogin","setLoadingLogin","processLoginWithToken","_asyncToGenerator2","token","userResult","Api","profile","getUserInfo","access_token","userInfoInToken","jwtDecode","status","console","log","SubscriptionApi","userDefaultSub","getDefaultSub","data","subId","isSubOwner","Promise","all","getUserRolesInSub","user","fullName","name","sub","sub_id","email_verified","preferred_username","given_name","family_name","email","roles","realm_access","accessToken","refreshToken","refresh_token","resolve","error","Alert","alert","_x","apply","arguments","signIn","config","authorizeResult","authorize","_x2","onSubmit","_ref3","result","auth","login","_x3","jsxs","View","style","children","jsx","LoginAnimation","gap","Text","fontWeight","fontSize","colors","primary","width","Dimensions","get","TextInput","marginBottom","label","onChangeText","text","trim","toLocaleLowerCase","right","Icon","icon","secureTextEntry","Button","mode","onPress","length","marginTop","display","flexDirection","IconButton","size","_ref5","height","GoogleIcon","margin","Linking","openURL"],"sourceRoot":""}